# Generated by Django 5.2.5 on 2025-09-16 09:25

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(editable=False, max_length=20, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Minimum: UGX 2,000', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('2000'))])),
                ('currency', models.CharField(default='UGX', editable=False, max_length=3)),
                ('phone_msisdn', models.CharField(help_text='Mobile money number (E.164 or local e.g. 0700xxxxxx)', max_length=15, validators=[django.core.validators.RegexValidator('^\\+?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('description', models.TextField()),
                ('business_reason', models.TextField()),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('finance_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('finance_decision_at', models.DateTimeField(blank=True, null=True)),
                ('finance_note', models.TextField(blank=True, default='')),
                ('admin_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('admin_decision_at', models.DateTimeField(blank=True, null=True)),
                ('admin_note', models.TextField(blank=True, default='')),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('CHEQUE', 'Cheque'), ('BANK_TRANSFER', 'Bank transfer'), ('MOBILE_MONEY', 'Mobile money')], default='CASH', max_length=20)),
                ('payment_status', models.CharField(choices=[('NOT_PAID', 'Not paid'), ('PARTIALLY_PAID', 'Partially paid'), ('PAID', 'Paid')], default='NOT_PAID', max_length=20)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('receipt_number', models.CharField(blank=True, default='', max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requires_admin_approval', models.BooleanField(default=False, help_text='Auto-true for bank transfers, can be used by workflows/guards.')),
                ('admin_reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='admin_approved_expenses', to=settings.AUTH_USER_MODEL)),
                ('finance_reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='finance_approved_expenses', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expense_requests', to=settings.AUTH_USER_MODEL)),
                ('expense_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expenses', to='expenses.expensetype')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='expense_attachments/%Y/%m/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='expenses.expenserequest')),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('FINANCE', 'Finance'), ('ADMIN', 'Admin')], max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], max_length=10)),
                ('note', models.TextField(blank=True, default='')),
                ('acted_at', models.DateTimeField(auto_now_add=True)),
                ('acted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expense_approval_actions', to=settings.AUTH_USER_MODEL)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_logs', to='expenses.expenserequest')),
            ],
            options={
                'ordering': ['-acted_at'],
            },
        ),
        migrations.AddIndex(
            model_name='expenserequest',
            index=models.Index(fields=['created_at'], name='expenses_ex_created_109284_idx'),
        ),
        migrations.AddIndex(
            model_name='expenserequest',
            index=models.Index(fields=['reference'], name='expenses_ex_referen_3aa370_idx'),
        ),
        migrations.AddIndex(
            model_name='expenserequest',
            index=models.Index(fields=['finance_status', 'admin_status'], name='expenses_ex_finance_453cdb_idx'),
        ),
        migrations.AddConstraint(
            model_name='expenserequest',
            constraint=models.CheckConstraint(condition=models.Q(('amount__gte', Decimal('2000'))), name='expense_amount_min_2000'),
        ),
        migrations.AddConstraint(
            model_name='expenserequest',
            constraint=models.CheckConstraint(condition=models.Q(('paid_amount__gte', Decimal('0.00'))), name='expense_paid_amount_nonneg'),
        ),
        migrations.AddConstraint(
            model_name='expenserequest',
            constraint=models.CheckConstraint(condition=models.Q(('paid_amount__lte', models.F('amount'))), name='expense_paid_amount_lte_amount'),
        ),
    ]
